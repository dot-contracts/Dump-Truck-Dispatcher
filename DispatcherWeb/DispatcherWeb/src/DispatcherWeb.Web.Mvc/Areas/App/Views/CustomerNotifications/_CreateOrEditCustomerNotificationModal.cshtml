@using DispatcherWeb.Authorization.Roles;
@using DispatcherWeb.Authorization.Roles.Dto;
@using DispatcherWeb.CustomerNotifications.Dto;
@using DispatcherWeb.Infrastructure
@using DispatcherWeb.Infrastructure.Extensions
@using DispatcherWeb.Web.Areas.App.Models.Common.Modals
@inject IRoleAppService RoleAppService
@model CustomerNotificationEditDto
@await Html.PartialAsync("~/Areas/app/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel("Create Customer Notification"))
@{
    var staticRoleNames = (await RoleAppService.GetStaticRoleNamesSelectListAsync(new GetStaticRoleNamesSelectListInput
    {
        MultiTenancySide = Abp.MultiTenancy.MultiTenancySides.Tenant,
    })).ToSelectListItems();
}

<div class="modal-body">
    <form role="form" novalidate class="form-validation">
        <input type="hidden" asp-for="Id" />
        <div class="form-group">
            <label class="required-label">Start Date</label>
            <input type="text" class="form-control order-field" asp-for="StartDate" required autocomplete="off">
        </div>
        <div class="form-group">
            <label class="required-label">End Date</label>
            <input type="text" class="form-control order-field" asp-for="EndDate" required autocomplete="off">
        </div>
        <div class="form-group">
            <label class="required-label">Title</label>
            <input class="form-control" type="text" asp-for="Title" maxlength="@EntityStringFieldLengths.CustomerNotification.Title" required>
        </div>
        <div class="form-group">
            <label class="required-label">Body</label>
            <textarea type="text" class="form-control" rows="5" asp-for="Body" maxlength="@EntityStringFieldLengths.CustomerNotification.Body" required></textarea>
        </div>
        <div class="form-group">
            <label>Editions</label>
            <select class="form-control" asp-for="EditionIds" multiple="multiple">
                @if (Model.Editions != null)
                {
                    foreach (var edition in Model.Editions)
                    {
                        <option value="@edition.Id" selected>@edition.Name</option>
                    }
                }
            </select>
        </div>
        <div class="form-group">
            <label>Tenants</label>
            <select class="form-control" asp-for="TenantIds" multiple="multiple">
                @if (Model.Tenants != null)
                {
                    foreach (var tenant in Model.Tenants)
                    {
                        <option value="@tenant.Id" selected>@tenant.Name</option>
                    }
                }
            </select>
        </div>
        <div class="form-group">
            <label class="required-label">Type</label>
            <select class="form-control" asp-for="Type" asp-items="Html.GetEnumSelectList<HostEmailType>()">
                <option>Select a type</option>
            </select>
        </div>
        <div class="form-group">
            <label>Roles</label>
            <select class="form-control" asp-for="RoleNames" multiple="multiple" asp-items="staticRoleNames">
                @foreach (var role in staticRoleNames)
                {
                    var selected = Model.Roles?.Any(x => x.Id == role.Value) == true;
                    <option selected="@selected" value="@role.Value">@role.Text</option>
                }
            </select>
        </div>
    </form>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-default close-button" data-dismiss="modal">Cancel</button>
    <button type="button" class="btn btn-primary save-button"><i class="fa fa-save"></i> <span>Save</span></button>
</div>
